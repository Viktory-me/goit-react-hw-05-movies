{"version":3,"sources":["views/MovieDetailsPage/MovieDetailsPage.jsx","Services/API.js","views/MovieDetailsPage/MovieDetailsPage.module.css"],"names":["Cast","lazy","Reviews","Status","MovieDetailsPage","movieId","useParams","useRouteMatch","url","path","useState","movie","setMovie","status","setStatus","error","setError","useEffect","fetchMovieDetails","then","catch","err","console","log","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","className","s","containerMovie","posterMovie","src","POSTER_URL","poster_path","alt","original_title","aboutInfo","nav","to","link","activeClassName","activeLink","titleMovie","infoDetails","vote_average","genres","list","map","item","index","name","overview","fallback","Base_Url","Api_Key","TREND_URL","fetchWithErrorHandling","a","config","fetch","response","ok","json","Promise","reject","Error","fetchMovieCast","id","fetchTrendingMovies","fetchMoviesByName","fetchMovieReviews","axios","defaults","baseURL","module","exports"],"mappings":"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","file":"static/js/MovieDetailsPage.02510cd3.chunk.js","sourcesContent":["import { lazy, Suspense } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  useParams,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchMovieDetails, POSTER_URL } from \"../../Services/API\";\r\nimport s from \"./MovieDetailsPage.module.css\";\r\nimport Spinner from \"../../Components/Loader/Loader\";\r\n\r\nconst Cast = lazy(() =>\r\n  import(\"../../Components/Cast/Cast\" /* webpackChunkName: \"Cast\" */)\r\n);\r\nconst Reviews = lazy(() =>\r\n  import(\"../../Components/Review/Review\" /* webpackChunkName: \"Review\" */)\r\n);\r\nconst Status = {\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n  const [movie, setMovie] = useState({});\r\n  const [status, setStatus] = useState(Status.PENDING);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n    fetchMovieDetails(movieId)\r\n      .then(setMovie)\r\n      .then(setStatus(Status.RESOLVED))\r\n      .catch((err) => {\r\n        console.log(error);\r\n        setError(Status.REJECTED);\r\n      });\r\n  }, [movieId, error]);\r\n\r\n  if (status === Status.PENDING) {\r\n    return <Spinner></Spinner>;\r\n  }\r\n  if (status === Status.REJECTED) {\r\n    return toast.dark(\"ðŸ¦„Page not found\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <>\r\n        <div className={s.containerMovie}>\r\n          <img\r\n            className={s.posterMovie}\r\n            src={POSTER_URL + movie.poster_path}\r\n            alt={movie.original_title}\r\n          />\r\n          <div className={s.aboutInfo}>\r\n            <nav className={s.nav}>\r\n              <NavLink\r\n                to={`${url}/cast`}\r\n                className={s.link}\r\n                activeClassName={s.activeLink}\r\n              >\r\n                Cast\r\n              </NavLink>\r\n              <NavLink\r\n                to={`${url}/reviews`}\r\n                className={s.link}\r\n                activeClassName={s.activeLink}\r\n              >\r\n                Reviews\r\n              </NavLink>\r\n            </nav>\r\n            <h2 className={s.titleMovie}>{movie.original_title}</h2>\r\n\r\n            <div>\r\n              <h3 className={s.infoDetails}>Raring:</h3>\r\n              <span>{movie.vote_average}</span>\r\n            </div>\r\n            {movie.genres && (\r\n              <>\r\n                <p className={s.infoDetails}>Genres:</p>\r\n                <ul className={s.list}>\r\n                  {movie.genres.map((item, index) => (\r\n                    <li key={index} className={s.item}>\r\n                      {item.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n\r\n            <div>\r\n              <h3 className={s.infoDetails}>About:</h3>\r\n              <span>{movie.overview}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Suspense fallback={<Spinner></Spinner>}>\r\n          <Switch>\r\n            <Route path={`${path}:movieId/cast`}>\r\n              <Cast movieId={movieId} />\r\n            </Route>\r\n\r\n            <Route path={`${path}:movieId/reviews`}>\r\n              <Reviews movieId={movieId} />\r\n            </Route>\r\n          </Switch>\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nconst Base_Url = \"https://api.themoviedb.org/3\";\r\nconst Api_Key = \"febbe388fd385fbc8b7d8be3042ab312\";\r\nexport const POSTER_URL = \"https://image.tmdb.org/t/p/w500\";\r\nconst TREND_URL = `${Base_Url}/trending/movie/day?api_key=${Api_Key}`;\r\n\r\naxios.defaults.baseURL = Base_Url;\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchMovieCast(id) {\r\n  return fetchWithErrorHandling(\r\n    `${Base_Url}/movie/${id}/credits?api_key=${Api_Key}&language=en-US`\r\n  );\r\n}\r\nexport function fetchTrendingMovies() {\r\n  return fetchWithErrorHandling(TREND_URL);\r\n}\r\n\r\nexport function fetchMoviesByName(name) {\r\n  return fetchWithErrorHandling(\r\n    `${Base_Url}/search/movie?api_key=${Api_Key}&query=${name}&language=en-US&page=1&include_adult=false`\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetails(id) {\r\n  return fetchWithErrorHandling(\r\n    `${Base_Url}/movie/${id}?api_key=${Api_Key}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchMovieReviews(id) {\r\n  return fetchWithErrorHandling(\r\n    `${Base_Url}/movie/${id}/reviews?api_key=${Api_Key}&language=en-US`\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMovie\":\"MovieDetailsPage_containerMovie__23eJa\",\"posterMovie\":\"MovieDetailsPage_posterMovie__3b7HX\",\"aboutInfo\":\"MovieDetailsPage_aboutInfo__30Pkf\",\"infoDetails\":\"MovieDetailsPage_infoDetails__Nh_EP\",\"titleMovie\":\"MovieDetailsPage_titleMovie__2qCn1\",\"list\":\"MovieDetailsPage_list__189vr\",\"link\":\"MovieDetailsPage_link__3rytZ\",\"activeLink\":\"MovieDetailsPage_activeLink__1AZ8h MovieDetailsPage_link__3rytZ\"};"],"sourceRoot":""}