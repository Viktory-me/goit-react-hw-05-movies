{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/SearchForm/SearchForm.jsx","Components/MovieSearch/MovieSearch.jsx","views/MoviesPage/MoviesPage.jsx","Services/API.js","Components/MovieCard/MovieCard.module.css","Components/MovieList/MovieList.module.css","images/noimage.jpg","Components/MovieCard/MovieCard.jsx","Components/MovieList/MovieList.jsx","Components/SearchForm/SearchForm.module.css"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","SearchForm","onSubmit","className","s","e","preventDefault","moviesName","elements","movie","trim","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","SearchFormInput","type","autoComplete","autoFocus","placeholder","name","SearchFormButton","Status","FilmsStatus","movieName","queryURL","useState","error","status","setStatus","movies","setMovies","useEffect","fetchMovies","fetchMoviesByName","then","newMovie","total_results","results","catch","err","console","log","MovieList","MoviesPage","history","useHistory","location","useLocation","setMovieName","URLSearchParams","search","get","query","Base_Url","Api_Key","POSTER_URL","TREND_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovieCast","id","fetchTrendingMovies","fetchMovieDetails","fetchMovieReviews","axios","defaults","baseURL","module","exports","MovieCard","title","original_name","poster_path","release_date","vote_average","movieCard","linkMovie","to","pathname","state","from","image","src","noimage","alt","fullInfo","infoMovie","infoMovieRelease","parseInt","infoMovieRating","list","map"],"mappings":"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","file":"static/js/MoviePage.ec8de132.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport s from \"./SearchForm.module.css\";\r\n\r\nfunction SearchForm({ onSubmit }) {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const moviesName = e.target.elements.movie.value;\r\n    if (moviesName.trim() === \"\") {\r\n      toast.dark(\"ðŸ¦„Please enter search query\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      //   alert(\"Please enter search query\");\r\n      return;\r\n    }\r\n\r\n    onSubmit(moviesName);\r\n  };\r\n\r\n  return (\r\n    <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n      <input\r\n        className={s.SearchFormInput}\r\n        type='text'\r\n        autoComplete='off'\r\n        autoFocus\r\n        placeholder='what are you looking for'\r\n        name='movie'\r\n      />\r\n      <button type='submit' className={s.SearchFormButton}></button>\r\n    </form>\r\n  );\r\n}\r\nexport default SearchForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchMoviesByName } from \"../../Services/API\";\r\nimport Spinner from \"../Loader/Loader\";\r\nimport MovieList from \"../MovieList/MovieList\";\r\n\r\nconst Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default function FilmsStatus({ movieName, queryURL }) {\r\n  const [error, setError] = useState({});\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = (name) => {\r\n      fetchMoviesByName(name)\r\n        .then((newMovie) => {\r\n          if (newMovie.total_results === 0) {\r\n            toast.dark(\"ðŸ¦„Incorrect!\", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n          if (newMovie.total_results > 0) {\r\n            setMovies(newMovie.results);\r\n            setStatus(Status.RESOLVED);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    if (movieName === \"\" && queryURL !== null) {\r\n      fetchMovies(queryURL);\r\n      return;\r\n    }\r\n    if (movieName) {\r\n      fetchMovies(movieName);\r\n    }\r\n  }, [movieName, error, queryURL]);\r\n\r\n  if (status === Status.IDLE) {\r\n    return \" \";\r\n  }\r\n\r\n  if (status === Status.PENDING) {\r\n    return <Spinner></Spinner>;\r\n  }\r\n\r\n  if (status === Status.REJECTED) {\r\n    return toast.dark(\"ðŸ¦„Page not found\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <>\r\n        <MovieList movies={movies} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport SearchForm from \"../../Components/SearchForm/SearchForm\";\r\nimport MovieSearch from \"../../Components/MovieSearch/MovieSearch.jsx\";\r\n\r\nexport default function MoviesPage() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [movieName, setMovieName] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const queryURL = new URLSearchParams(location.search).get(\"query\");\r\n\r\n  const onQueryChange = (query) => {\r\n    history.push({ ...location, search: `query=${query}` });\r\n  };\r\n\r\n  const onSubmit = (name) => {\r\n    setMovieName(name);\r\n    setMovies([]);\r\n    onQueryChange(name);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchForm onSubmit={onSubmit}></SearchForm>\r\n      <MovieSearch movieName={movieName} queryURL={queryURL} />\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst Base_Url = \"https://api.themoviedb.org/3\";\r\nconst Api_Key = \"febbe388fd385fbc8b7d8be3042ab312\";\r\nexport const POSTER_URL = \"https://image.tmdb.org/t/p/w500\";\r\nconst TREND_URL = `${Base_Url}/trending/movie/day?api_key=${Api_Key}`;\r\n\r\naxios.defaults.baseURL = Base_Url;\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchMovieCast(id) {\r\n  return fetchWithErrorHandling(\r\n    `${Base_Url}/movie/${id}/credits?api_key=${Api_Key}&language=en-US`\r\n  );\r\n}\r\nexport function fetchTrendingMovies() {\r\n  return fetchWithErrorHandling(TREND_URL);\r\n}\r\n\r\nexport function fetchMoviesByName(name) {\r\n  return fetchWithErrorHandling(\r\n    `${Base_Url}/search/movie?api_key=${Api_Key}&query=${name}&language=en-US&page=1&include_adult=false`\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetails(id) {\r\n  return fetchWithErrorHandling(\r\n    `${Base_Url}/movie/${id}?api_key=${Api_Key}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchMovieReviews(id) {\r\n  return fetchWithErrorHandling(\r\n    `${Base_Url}/movie/${id}/reviews?api_key=${Api_Key}&language=en-US`\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"MovieCard_movieCard__1-AYF\",\"image\":\"MovieCard_image__3fsYT\",\"infoMovie\":\"MovieCard_infoMovie__YMFwZ\",\"infoMovieRelease\":\"MovieCard_infoMovieRelease__3HdzP\",\"infoMovieRating\":\"MovieCard_infoMovieRating__2qh_v\",\"fullInfo\":\"MovieCard_fullInfo__VDuFv\",\"linkMovie\":\"MovieCard_linkMovie__19Dfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MovieList_list__J24gA\"};","export default __webpack_public_path__ + \"static/media/noimage.ed97b93f.jpg\";","import { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport noimage from \"../../images/noimage.jpg\";\r\nimport s from \"./MovieCard.module.css\";\r\n\r\nfunction MovieCard({\r\n  id,\r\n  title,\r\n  original_name,\r\n  poster_path,\r\n  release_date,\r\n  vote_average,\r\n}) {\r\n  const location = useLocation();\r\n  return (\r\n    <li className={s.movieCard}>\r\n      <Link\r\n        className={s.linkMovie}\r\n        to={{\r\n          pathname: `/movies/${id}`,\r\n          state: { from: location },\r\n        }}\r\n      >\r\n        <img\r\n          className={s.image}\r\n          src={\r\n            poster_path\r\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n              : noimage\r\n          }\r\n          alt={\"about movie\"}\r\n        />\r\n        <div className={s.fullInfo}>\r\n          <span className={s.infoMovie}>\r\n            {title ? title : original_name} |{\" \"}\r\n          </span>\r\n          <span className={s.infoMovieRelease}>\r\n            {release_date ? parseInt(release_date) : \"\"}\r\n          </span>{\" \"}\r\n          <span className={s.infoMovieRating}>{vote_average}</span>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string,\r\n  original_name: PropTypes.string,\r\n  release_date: PropTypes.string,\r\n  vote_average: PropTypes.number,\r\n};\r\n\r\nexport default MovieCard;\r\n","import PropTypes from \"prop-types\";\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\nimport s from \"./MovieList.module.css\";\r\n\r\nfunction MovieList({ movies }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {movies.map(\r\n        ({\r\n          id,\r\n          title,\r\n          original_name,\r\n          poster_path,\r\n          release_date,\r\n          vote_average,\r\n        }) => {\r\n          return (\r\n            <MovieCard\r\n              key={id}\r\n              id={id}\r\n              title={title}\r\n              original_name={original_name}\r\n              poster_path={poster_path}\r\n              release_date={release_date}\r\n              vote_average={vote_average}\r\n            />\r\n          );\r\n        }\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n\r\nexport default MovieList;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchForm_SearchForm__3vw8h\",\"SearchFormButton\":\"SearchForm_SearchFormButton__2RYbo\",\"SearchFormInput\":\"SearchForm_SearchFormInput__SnNq6\"};"],"sourceRoot":""}